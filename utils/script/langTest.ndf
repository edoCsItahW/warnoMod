// 注释1
/* 注释2 */
"字符串1"
'字符串2'
true
false
3
3.14
-1
0xfff
.127
[1, 2, 3]
["foo", "bar", "baz"]
(1, 2)
(1, "foo")
MAP [
    (1, "foo"),
    (2, "bar"),
]

Gravity is 9.81

Currencies is MAP [
    ('EUR', 1),
    ('USD', 1.1),
    ('GBP', 0.85),
]

Pi is 3 + 0.14

PiCube is Pi * Pi * Pi

x is 35 div 8

y is 35 % 8

A is [1, 2] + [3, 4]

B is MAP [(1, "one")] + MAP [(2, "two")]

C is "Hello" + " World"

ExampleObj is TExampleType (
    MemberInt = 1,
    MemberStr = "SomeString"
)

ExampleObject is TExampleType (
    innerObject = TOtherType (
        ValueString = "I am a member of TExampleType"
    )
)

unnamed TExampleType (
    ValueString = "I am an unnamed object"
)

ExampleObject is TExampleType (
    InnerExample = ExampleObject2 is TExampleType (
        InnerExample = ExampleObject3 is TExampleType()
        )
)

ExampleObject is TExampleType (
    InnerExample = TExampleType (
        InnerExample = ExampleObject3 is TExampleType()
        )
)

ExampleObject is TExampleType (
    InnerExample = _ is TExampleType (
        InnerExample = ExampleObject3 is TExampleType()
        )
)

DataHolder is TDataHolder (
    SomeInt = 456
    SomeString = "A string"
    SomeMap = MAP[ {...} ]
)

DataUser is TDataUser (
    Condition = false
    DataHolderReference = DataHolder // 这里我们引用DataHolder对象
)

$/Path/To/OtherObject // 绝对引用
~/Path/To/OtherObject // 来自加载命名空间的引用（modder无法知道）
./Path/To/OtherObject // 来自当前命名空间的引用

Prototype is TThing (
    ValueString = 'I am a prototype object'
    ValueInt = 666
)

ObjectFromPrototype is Prototype (
    ValueString = 'I am just me'
)

// 什么都不做的基本模板
template MyTemplate // 模板名称
[] // 模板参数
is TType // 模板创建的对象的最终类型
() // 类型成员
// 更详细的示例
// 假设存在TWeapon和TCharacter类型。

Axe is TWeapon
(
// 下面是成员们对这种武器的描述
)

Knife is TWeapon ()
template Character [
    Name : string,  // Name必须是字符串
    Level : int = 1,  // Level的默认值为1
    Weapon : TWeapon = TWeapon()  // Weapon必须是TWeapon
]
is TCharacter (
    Name = <Name> // <Name>指的是名为“Name”的模板参数
    Level = <Level>
    HP = <Level> * 100
    Weapon = <Weapon>
    Damages = <Weapon>/Damages * (1 + Level div 10)
)

Hero is Character (
    Name = "Hero"
    Level = 12
    Weapon = Axe
)

Creep is Character (
    Name = "Creep"
    Weapon = Knife
    // 未指定Level，使用默认值
)
template Character [
    Name : string,
    Level : int = 1,
    Weapon : TWeapon = TWeapon()
]
is TCharacter (
    Bag is TInventory (
        MaxItemCount = <Level> * 3
        )
    Name = <Name>
    Level = <Level>
    HP = <Level> * 100
    Weapon = <Weapon>
    Damages = <Weapon>/Damages * (1 + Level div 10)
    Inventory = Bag
)

template CloneHero [
    Name : string
]
is Character (
    Name = <Name>
    Level = 12
    Weapon = Axe
)

template CloneHero [
    Name : string
]
is Character (
    Name = <Name>
    Level = 12
    Weapon = Axe
    Bag is TInventory ( MaxItemCount = 0 )
)
